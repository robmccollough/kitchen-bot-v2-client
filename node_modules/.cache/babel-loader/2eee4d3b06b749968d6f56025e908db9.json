{"ast":null,"code":"import _slicedToArray from \"/Users/peytongillenwater/Desktop/Classes/COMP426/KitchenBot/kitchen-bot-v2-client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/peytongillenwater/Desktop/Classes/COMP426/KitchenBot/kitchen-bot-v2-client/src/components/new/metric/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { Header, Image, Grid } from \"semantic-ui-react\";\nimport axios from 'axios';\n\nconst Metric = props => {\n  //hook declarations go here\n  async function fetchMetric() {\n    await axios({\n      method: 'get',\n      url: \"\".concat(process.env.React_APP_SERVER_PATH, \"/metric\"),\n      headers: {\n        authorization: \"Bearer \" + props.authtoken\n      }\n    }).then(res => {\n      if (res.success) {\n        setMetrics(res.data);\n        console.log(res.data);\n      }\n    });\n  }\n\n  ;\n\n  const _useState = useState([]),\n        _useState2 = _slicedToArray(_useState, 2),\n        metrics = _useState2[0],\n        setMetrics = _useState2[1];\n\n  useEffect(() => {\n    fetchMetric();\n  }, []);\n  console.log();\n  return React.createElement(Grid, {\n    className: \"metrics-grid\",\n    divided: \"vertically\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, React.createElement(Grid.Column, {\n    width: 5,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }, React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Menu Metrics\"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37\n    },\n    __self: this\n  }, \"People Asked For Menus: Times\"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, \"Total Number of Menus Created: \")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, \"Dinner Metrics\"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"Dinner Was Asked For: Times\"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, \"Total Number Of Dinners Had: \")), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }), React.createElement(\"br\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }), React.createElement(Grid.Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50\n    },\n    __self: this\n  }, \"Lateplate Metrics\"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51\n    },\n    __self: this\n  }, \"Total Lateplates Asked For: \"), React.createElement(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, \"Total Lateplates Completed: \"))));\n};\n\nexport default Metric;","map":{"version":3,"sources":["/Users/peytongillenwater/Desktop/Classes/COMP426/KitchenBot/kitchen-bot-v2-client/src/components/new/metric/index.js"],"names":["React","useState","useEffect","Header","Image","Grid","axios","Metric","props","fetchMetric","method","url","process","env","React_APP_SERVER_PATH","headers","authorization","authtoken","then","res","success","setMetrics","data","console","log","metrics"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,KAAjB,EAAwBC,IAAxB,QAAoC,mBAApC;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAGA,MAAMC,MAAM,GAAGC,KAAK,IAAI;AACpB;AACA,iBAAeC,WAAf,GAA6B;AAC3B,UAAMH,KAAK,CAAC;AACVI,MAAAA,MAAM,EAAE,KADE;AAEVC,MAAAA,GAAG,YAAKC,OAAO,CAACC,GAAR,CAAYC,qBAAjB,YAFO;AAGVC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAE,YAAYR,KAAK,CAACS;AAD1B;AAHC,KAAD,CAAL,CAMHC,IANG,CAMGC,GAAG,IAAI;AACR,UAAGA,GAAG,CAACC,OAAP,EAAe;AACXC,QAAAA,UAAU,CAACF,GAAG,CAACG,IAAL,CAAV;AACAC,QAAAA,OAAO,CAACC,GAAR,CAAYL,GAAG,CAACG,IAAhB;AACH;AACJ,KAXC,CAAN;AAYC;;AAAA;;AAfiB,oBAiBOrB,QAAQ,CAAC,EAAD,CAjBf;AAAA;AAAA,QAiBhBwB,OAjBgB;AAAA,QAiBPJ,UAjBO;;AAmBvBnB,EAAAA,SAAS,CAAC,MAAM;AACTO,IAAAA,WAAW;AACjB,GAFQ,EAEN,EAFM,CAAT;AAKGc,EAAAA,OAAO,CAACC,GAAR;AAEA,SACD,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,cAAhB;AAA+B,IAAA,OAAO,EAAC,YAAvC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD,CAAM,MAAN;AAAa,IAAA,KAAK,EAAE,CAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACC,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADnB,EAEmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAFnB,EAGmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uCAHnB,CADD,EAMC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAND,EAOC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPD,EAQC,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADnB,EAEmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAFnB,EAGmB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAHnB,CARD,EAaC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbD,EAcC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAdD,EAegB,oBAAC,IAAD,CAAM,GAAN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAFJ,EAGI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCAHJ,CAfhB,CADD,CADC;AAyBH,CAnDD;;AAqDA,eAAejB,MAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Header, Image, Grid } from \"semantic-ui-react\";\nimport axios from 'axios';\n\n\nconst Metric = props => {\n    //hook declarations go here\n    async function fetchMetric() {\n      await axios({\n        method: 'get',\n        url: `${process.env.React_APP_SERVER_PATH}/metric`,\n        headers: {\n          authorization: \"Bearer \" + props.authtoken\n              }\n      }).then( res => {\n              if(res.success){\n                  setMetrics(res.data)\n                  console.log(res.data)\n              }\n          })\n      };\n\n\tconst [metrics, setMetrics] = useState([])\n\t\n\tuseEffect(() => {\n        fetchMetric()\n\t}, []);\n    \n\n    console.log()\n\n    return (\n\t\t\t<Grid className=\"metrics-grid\" divided=\"vertically\">\n\t\t\t\t<Grid.Column width={5}>\n\t\t\t\t\t<Grid.Row>\n                        <h1>Menu Metrics</h1>\n                        <h3>People Asked For Menus: Times</h3>\n                        <h3>Total Number of Menus Created: </h3>\n                    </Grid.Row>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<Grid.Row>\n                        <h1>Dinner Metrics</h1>\n                        <h3>Dinner Was Asked For: Times</h3>\n                        <h3>Total Number Of Dinners Had: </h3>\n                    </Grid.Row>\n\t\t\t\t\t<br></br>\n\t\t\t\t\t<br></br>\n                    <Grid.Row>\n                        <h1>Lateplate Metrics</h1>\n                        <h3>Total Lateplates Asked For: </h3>\n                        <h3>Total Lateplates Completed: </h3>\n                    </Grid.Row>\n\t\t\t\t</Grid.Column>\n\t\t\t</Grid>\n    );\n};\n\nexport default Metric;"]},"metadata":{},"sourceType":"module"}