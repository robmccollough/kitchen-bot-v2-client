{"ast":null,"code":"import _defineProperty from \"/Users/peytongillenwater/Desktop/Classes/COMP426/KitchenBot/kitchen-bot-v2-client/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { MENU_UPLOAD_IS_LOADING, MENU_UPLOAD_NOT_LOADING, MENU_UPLOAD_COMPLETE, RECENT_MENU_IS_LOADING, RECENT_MENU_NOT_LOADING, RECENT_MENU_FETCHED, MENU_UPLOAD_FORM_CHANGE } from './constants';\nconst initialState = {\n  user: {\n    id: null,\n    is_authenticated: false\n  },\n  menu_form: {\n    is_loading: false,\n    is_visible: true,\n    upload_success: false,\n    data: {\n      date: new Date(),\n      food: {\n        monday: {\n          main: '',\n          side: ''\n        },\n        tuesday: {\n          main: '',\n          side: ''\n        },\n        wednesday: {\n          main: '',\n          side: ''\n        },\n        thursday: {\n          main: '',\n          side: ''\n        },\n        friday: {\n          main: '',\n          side: ''\n        }\n      }\n    }\n  },\n  menu_display: {\n    is_loading: false,\n    is_visible: true,\n    data: {\n      date: new Date(),\n      food: {\n        monday: {\n          main: '',\n          side: ''\n        },\n        tuesday: {\n          main: '',\n          side: ''\n        },\n        wednesday: {\n          main: '',\n          side: ''\n        },\n        thursday: {\n          main: '',\n          side: ''\n        },\n        friday: {\n          main: '',\n          side: ''\n        }\n      }\n    }\n  }\n};\nexport function reducer(state = initialState, action) {\n  switch (action.type) {\n    case MENU_UPLOAD_IS_LOADING:\n      return _objectSpread({}, state, {\n        menu_form: _objectSpread({}, state.menu_form, {\n          is_loading: true\n        })\n      });\n\n    case MENU_UPLOAD_NOT_LOADING:\n      return _objectSpread({}, state, {\n        menu_form: _objectSpread({}, state.menu_form, {\n          is_loading: false\n        })\n      });\n\n    case MENU_UPLOAD_FORM_CHANGE:\n      return _objectSpread({}, state, {\n        menu_form: _objectSpread({}, state.menu_form, {\n          data: _objectSpread({}, state.menu_form.data, {\n            food: _objectSpread({}, state.menu_form.data.food, {\n              [action.payload.day]: _objectSpread({}, state.menu_form.data.food[action.payload.day], {\n                [action.payload.meal]: action.payload.value\n              })\n            })\n          })\n        })\n      });\n    //the data upload will happen elsewhere, just reset the values displayed in the form\n\n    case MENU_UPLOAD_COMPLETE:\n      return _objectSpread({}, state, {\n        menu_form: _objectSpread({}, initialState.menu_form, {\n          upload_success: true\n        })\n      });\n\n    case RECENT_MENU_IS_LOADING:\n      return _objectSpread({}, state, {\n        menu_display: _objectSpread({}, state.menu_display, {\n          is_loading: true\n        })\n      });\n\n    case RECENT_MENU_NOT_LOADING:\n      return _objectSpread({}, state, {\n        menu_display: _objectSpread({}, state.menu_display, {\n          is_loading: false\n        })\n      });\n\n    case RECENT_MENU_FETCHED:\n      return _objectSpread({}, state, {\n        menu_display: _objectSpread({}, state.menu_display, {\n          data: action.payload\n        })\n      });\n\n    default:\n      return state;\n  }\n}","map":{"version":3,"sources":["/Users/peytongillenwater/Desktop/Classes/COMP426/KitchenBot/kitchen-bot-v2-client/src/redux/reducer.js"],"names":["MENU_UPLOAD_IS_LOADING","MENU_UPLOAD_NOT_LOADING","MENU_UPLOAD_COMPLETE","RECENT_MENU_IS_LOADING","RECENT_MENU_NOT_LOADING","RECENT_MENU_FETCHED","MENU_UPLOAD_FORM_CHANGE","initialState","user","id","is_authenticated","menu_form","is_loading","is_visible","upload_success","data","date","Date","food","monday","main","side","tuesday","wednesday","thursday","friday","menu_display","reducer","state","action","type","payload","day","meal","value"],"mappings":"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","sourcesContent":["import {\n    MENU_UPLOAD_IS_LOADING,\n    MENU_UPLOAD_NOT_LOADING,\n    MENU_UPLOAD_COMPLETE,\n    RECENT_MENU_IS_LOADING, \n    RECENT_MENU_NOT_LOADING, \n    RECENT_MENU_FETCHED,\n    MENU_UPLOAD_FORM_CHANGE \n}from './constants';\n\nconst initialState = {\n        user:{\n            id: null,\n            is_authenticated: false\n        },\n        menu_form: {\n            is_loading: false,\n            is_visible: true,\n            upload_success: false,\n            data: {\n                date: new Date(),\n                food: {\n                monday:{\n                    main:'',\n                    side:''\n                    },\n                tuesday:{\n                    main:'',\n                    side:''\n                    },\n                wednesday:{\n                    main:'',\n                    side:''\n                    },\n                thursday:{\n                    main:'',\n                    side:''\n                    },\n                friday:{\n                    main:'',\n                    side:''\n                    }\n                }\n            }\n        },\n        menu_display: {\n            is_loading: false,\n            is_visible: true,\n            data: {\n                date: new Date(),\n                food: {\n                monday:{\n                    main:'',\n                    side:''\n                },\n                tuesday:{\n                    main:'',\n                    side:''\n                },\n                wednesday:{\n                    main:'',\n                    side:''\n                },\n                thursday:{\n                    main:'',\n                    side:''\n                },\n                friday:{\n                    main:'',\n                    side:''\n                }\n                }\n            }\n        }\n}\n\nexport function reducer(state = initialState, action){\n    switch(action.type){\n\n        case MENU_UPLOAD_IS_LOADING: return {\n            ...state,\n            menu_form: { \n                ...state.menu_form,\n                is_loading: true\n            }\n        }\n        case MENU_UPLOAD_NOT_LOADING: return {\n            ...state,\n            menu_form: { \n                ...state.menu_form,\n                is_loading: false\n            }\n        }\n\n        case MENU_UPLOAD_FORM_CHANGE: return {\n            ...state,\n            menu_form: {\n                ...state.menu_form,\n                data: {\n                    ...state.menu_form.data,\n                    food: {\n                        ...state.menu_form.data.food,\n                        [action.payload.day]: {\n                            ...state.menu_form.data.food[action.payload.day],\n                            [action.payload.meal]: action.payload.value\n                        }\n                    }\n\n                }\n            }\n        }\n\n        //the data upload will happen elsewhere, just reset the values displayed in the form\n        case MENU_UPLOAD_COMPLETE: return {\n            ...state,\n            menu_form: {\n                ...initialState.menu_form,\n                upload_success: true\n            }\n\n        }\n        case RECENT_MENU_IS_LOADING: return {\n            ...state,\n            menu_display: { \n                ...state.menu_display,\n                is_loading: true\n            }\n        }\n        case RECENT_MENU_NOT_LOADING: return {\n            ...state,\n            menu_display: { \n                ...state.menu_display,\n                is_loading: false\n            }\n        }\n        case RECENT_MENU_FETCHED: return {\n            ...state,\n            menu_display: {\n                ...state.menu_display,\n                data: action.payload\n            }\n        }\n        default:\n            return state;\n    }\n}"]},"metadata":{},"sourceType":"module"}