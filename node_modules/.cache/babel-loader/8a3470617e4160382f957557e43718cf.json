{"ast":null,"code":"import _slicedToArray from \"/Users/peytongillenwater/Desktop/Classes/COMP426/KitchenBot/kitchen-bot-v2-client/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/Users/peytongillenwater/Desktop/Classes/COMP426/KitchenBot/kitchen-bot-v2-client/src/components/new/register/index.js\";\nimport React, { useState, useEffect } from \"react\";\nimport { BrowserRouter as Router, Route, Redirect, Link } from \"react-router-dom\";\nimport useForm from \"react-hook-form\";\nimport axios from \"axios\";\nimport { Form, Button, Container, Header, Popup, Icon, Segment } from \"semantic-ui-react\";\nimport \"./index.css\";\n\nconst Register = () => {\n  useEffect(() => {\n    register({\n      name: \"email\",\n      type: \"custom\"\n    }, {\n      required: \"Please enter a valid email\"\n    });\n    register({\n      name: \"password\",\n      type: \"custom\"\n    }, {\n      required: \"Please enter a password\"\n    });\n    register({\n      name: \"confirm\",\n      type: \"custom\"\n    }, {\n      validate: value => value === getValues().password || \"Passwords must match\"\n    });\n    register({\n      name: \"gm_link\",\n      type: \"custom\"\n    });\n  }, []);\n\n  const _useState = useState(false),\n        _useState2 = _slicedToArray(_useState, 2),\n        addLink = _useState2[0],\n        setAddLink = _useState2[1];\n\n  const _useState3 = useState(false),\n        _useState4 = _slicedToArray(_useState3, 2),\n        renderAuth = _useState4[0],\n        setRenderAuth = _useState4[1];\n\n  const _useForm = useForm(),\n        register = _useForm.register,\n        errors = _useForm.errors,\n        setError = _useForm.setError,\n        handleSubmit = _useForm.handleSubmit,\n        setValue = _useForm.setValue,\n        getValues = _useForm.getValues,\n        triggerValidation = _useForm.triggerValidation; //wait until registration is complete\n\n\n  const onSubmit = async (data, e) => {\n    return await axios({\n      method: \"post\",\n      url: process.env.REACT_APP_SERVER_PATH + \"/user\",\n      data: {\n        email: data.email,\n        password: data.password\n      }\n    }).then(result => {\n      if (result.data.success) {\n        console.log(result);\n        setAddLink(true);\n      }\n    }).catch(err => setError(\"create\", \"bad-create\", err.msg));\n  };\n\n  return React.createElement(\"div\", {\n    className: \"register-page\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75\n    },\n    __self: this\n  }, React.createElement(Form, {\n    className: \"register-form\",\n    onSubmit: handleSubmit(onSubmit),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, React.createElement(Header, {\n    className: \"register-header\",\n    content: \"Create An Account\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 77\n    },\n    __self: this\n  }), React.createElement(Popup, {\n    trigger: React.createElement(Form.Input, {\n      name: \"email\",\n      fluid: true,\n      label: \"Email\",\n      placeholder: \"Email\",\n      onChange: async (e, {\n        name,\n        value\n      }) => {\n        setValue(name, value);\n        await triggerValidation({\n          name\n        });\n      },\n      error: errors.email ? true : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 81\n      },\n      __self: this\n    }),\n    content: errors.email && errors.email.message,\n    open: errors.email ? true : false,\n    position: \"right center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79\n    },\n    __self: this\n  }), React.createElement(Popup, {\n    trigger: React.createElement(Form.Input, {\n      name: \"password\",\n      fluid: true,\n      label: \"Password\",\n      placeholder: \"Password\",\n      onChange: async (e, {\n        name,\n        value\n      }) => {\n        setValue(name, value);\n        await triggerValidation({\n          name\n        });\n      },\n      error: errors.password ? true : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }),\n    content: errors.password && errors.password.message,\n    open: errors.password ? true : false,\n    position: \"right center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97\n    },\n    __self: this\n  }), React.createElement(Popup, {\n    trigger: React.createElement(Form.Input, {\n      name: \"confirm\",\n      fluid: true,\n      label: \"Confirm Password\",\n      placeholder: \"Confirm Password\",\n      onChange: async (e, {\n        name,\n        value\n      }) => {\n        setValue(name, value);\n        await triggerValidation({\n          name\n        });\n      },\n      error: errors.confirm ? true : false,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 117\n      },\n      __self: this\n    }),\n    content: errors.confirm && errors.confirm.message,\n    open: errors.confirm ? true : false,\n    position: \"right center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115\n    },\n    __self: this\n  }), React.createElement(Form.Group, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134\n    },\n    __self: this\n  }, React.createElement(Form.Checkbox, {\n    name: \"gm_link\",\n    label: \"Link GroupMe Account?\",\n    onChange: async (e, {\n      name,\n      checked\n    }) => {\n      setValue(name, checked);\n      await triggerValidation({\n        name\n      });\n    },\n    error: errors.gm_link ? true : false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135\n    },\n    __self: this\n  }), React.createElement(Popup, {\n    content: \"Allows linking to groupme lateplates\",\n    trigger: React.createElement(Icon, {\n      name: \"question\",\n      size: \"large\",\n      color: \"grey\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }),\n    position: \"right center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145\n    },\n    __self: this\n  })), addLink ? React.createElement(\"a\", {\n    href: \"https://oauth.groupme.com/oauth/authorize?client_id=iPV0ihYHVPnlo1KEev9nsJMWMm0xgz8gvpUvtE5pPqaH6Hcf\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, \"Go to GroupMe\") : React.createElement(Button, {\n    type: \"submit\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, \"Register\"), errors.create && React.createElement(Segment, {\n    color: \"red\",\n    inverted: true,\n    content: errors.create.message,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160\n    },\n    __self: this\n  })));\n};\n\nexport default Register; // const Register = (props) => {\n//     const {handleSubmit, register, errors, getValues} = useForm();\n//     console.log(errors)\n//     const onSubmit = values => {\n//         console.log(values)\n//     }\n//     //returns true if email is use\n//     const checkEmail = async (email) => {\n//         return await axios({\n//             method: 'post',\n//             url: '/user/check',\n//             body:{\n//                 email: email\n//             }\n//         }).then( result => {\n//             return result.in_use\n//         })\n//     }\n//     //put the cookie check/redirect here\n//     return <Container centered className=\"register-page\">\n//         <Form className=\"register-form\" onSubmit={handleSubmit(onSubmit)}>\n//         <input type=\"text\" placeholder=\"Email\" name=\"Email\" ref={register({\n//             required: true,\n//             pattern: /^\\S+@\\S+$/i,\n//             validate: value => checkEmail(value)\n//             })} />\n//             {errors.email && \"Email already in use\"}\n//         <input type=\"text\" placeholder=\"Password\" name=\"Password\" ref={register({required: true})} />\n//         <input type=\"text\" placeholder=\"Confirm Password\" name=\"Password\" ref={register({required: true, validate: value => {\n//             console.log(getValues())\n//         }})} />\n//         <input type=\"checkbox\" placeholder=\"Link GroupMe Account?\" name=\"Link GroupMe Account?\" ref={register} />\n//         <input type=\"submit\" />\n//         </Form>\n//     </Container>\n// }\n// export default Register","map":{"version":3,"sources":["/Users/peytongillenwater/Desktop/Classes/COMP426/KitchenBot/kitchen-bot-v2-client/src/components/new/register/index.js"],"names":["React","useState","useEffect","BrowserRouter","Router","Route","Redirect","Link","useForm","axios","Form","Button","Container","Header","Popup","Icon","Segment","Register","register","name","type","required","validate","value","getValues","password","addLink","setAddLink","renderAuth","setRenderAuth","errors","setError","handleSubmit","setValue","triggerValidation","onSubmit","data","e","method","url","process","env","REACT_APP_SERVER_PATH","email","then","result","success","console","log","catch","err","msg","message","confirm","checked","gm_link","create"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport {\n\tBrowserRouter as Router,\n\tRoute,\n\tRedirect,\n\tLink\n} from \"react-router-dom\";\nimport useForm from \"react-hook-form\";\nimport axios from \"axios\";\nimport {\n\tForm,\n\tButton,\n\tContainer,\n\tHeader,\n\tPopup,\n\tIcon,\n\tSegment\n} from \"semantic-ui-react\";\nimport \"./index.css\";\n\nconst Register = () => {\n\tuseEffect(() => {\n\t\tregister(\n\t\t\t{ name: \"email\", type: \"custom\" },\n\t\t\t{ required: \"Please enter a valid email\" }\n\t\t);\n\t\tregister(\n\t\t\t{ name: \"password\", type: \"custom\" },\n\t\t\t{ required: \"Please enter a password\" }\n\t\t);\n\t\tregister(\n\t\t\t{ name: \"confirm\", type: \"custom\" },\n\t\t\t{\n\t\t\t\tvalidate: value =>\n\t\t\t\t\tvalue === getValues().password || \"Passwords must match\"\n\t\t\t}\n\t\t);\n\t\tregister({ name: \"gm_link\", type: \"custom\" });\n\t}, []);\n\n\tconst [addLink, setAddLink] = useState(false);\n\n\tconst [renderAuth, setRenderAuth] = useState(false);\n\n\tconst {\n\t\tregister,\n\t\terrors,\n\t\tsetError,\n\t\thandleSubmit,\n\t\tsetValue,\n\t\tgetValues,\n\t\ttriggerValidation\n\t} = useForm();\n\n\t//wait until registration is complete\n\tconst onSubmit = async (data, e) => {\n\t\treturn await axios({\n\t\t\tmethod: \"post\",\n\t\t\turl: process.env.REACT_APP_SERVER_PATH + \"/user\",\n\t\t\tdata: {\n\t\t\t\temail: data.email,\n\t\t\t\tpassword: data.password\n\t\t\t}\n\t\t})\n\t\t\t.then(result => {\n\t\t\t\tif (result.data.success) {\n\t\t\t\t\tconsole.log(result);\n\t\t\t\t\tsetAddLink(true);\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch(err => setError(\"create\", \"bad-create\", err.msg));\n\t};\n\n\treturn (\n\t\t<div className={\"register-page\"}>\n\t\t\t<Form className=\"register-form\" onSubmit={handleSubmit(onSubmit)}>\n\t\t\t\t<Header className=\"register-header\" content=\"Create An Account\" />\n\n\t\t\t\t<Popup\n\t\t\t\t\ttrigger={\n\t\t\t\t\t\t<Form.Input\n\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\tlabel=\"Email\"\n\t\t\t\t\t\t\tplaceholder=\"Email\"\n\t\t\t\t\t\t\tonChange={async (e, { name, value }) => {\n\t\t\t\t\t\t\t\tsetValue(name, value);\n\t\t\t\t\t\t\t\tawait triggerValidation({ name });\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\terror={errors.email ? true : false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\tcontent={errors.email && errors.email.message}\n\t\t\t\t\topen={errors.email ? true : false}\n\t\t\t\t\tposition=\"right center\"\n\t\t\t\t/>\n\t\t\t\t<Popup\n\t\t\t\t\ttrigger={\n\t\t\t\t\t\t<Form.Input\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\t\tplaceholder=\"Password\"\n\t\t\t\t\t\t\tonChange={async (e, { name, value }) => {\n\t\t\t\t\t\t\t\tsetValue(name, value);\n\t\t\t\t\t\t\t\tawait triggerValidation({ name });\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\terror={errors.password ? true : false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\tcontent={errors.password && errors.password.message}\n\t\t\t\t\topen={errors.password ? true : false}\n\t\t\t\t\tposition=\"right center\"\n\t\t\t\t/>\n\t\t\t\t<Popup\n\t\t\t\t\ttrigger={\n\t\t\t\t\t\t<Form.Input\n\t\t\t\t\t\t\tname=\"confirm\"\n\t\t\t\t\t\t\tfluid\n\t\t\t\t\t\t\tlabel=\"Confirm Password\"\n\t\t\t\t\t\t\tplaceholder=\"Confirm Password\"\n\t\t\t\t\t\t\tonChange={async (e, { name, value }) => {\n\t\t\t\t\t\t\t\tsetValue(name, value);\n\t\t\t\t\t\t\t\tawait triggerValidation({ name });\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\terror={errors.confirm ? true : false}\n\t\t\t\t\t\t/>\n\t\t\t\t\t}\n\t\t\t\t\tcontent={errors.confirm && errors.confirm.message}\n\t\t\t\t\topen={errors.confirm ? true : false}\n\t\t\t\t\tposition=\"right center\"\n\t\t\t\t/>\n\n\t\t\t\t<Form.Group>\n\t\t\t\t\t<Form.Checkbox\n\t\t\t\t\t\tname=\"gm_link\"\n\t\t\t\t\t\tlabel=\"Link GroupMe Account?\"\n\t\t\t\t\t\tonChange={async (e, { name, checked }) => {\n\t\t\t\t\t\t\tsetValue(name, checked);\n\t\t\t\t\t\t\tawait triggerValidation({ name });\n\t\t\t\t\t\t}}\n\t\t\t\t\t\terror={errors.gm_link ? true : false}\n\t\t\t\t\t/>\n\n\t\t\t\t\t<Popup\n\t\t\t\t\t\tcontent=\"Allows linking to groupme lateplates\"\n\t\t\t\t\t\ttrigger={<Icon name=\"question\" size=\"large\" color=\"grey\" />}\n\t\t\t\t\t\tposition=\"right center\"\n\t\t\t\t\t/>\n\t\t\t\t</Form.Group>\n\n\t\t\t\t{addLink ? (\n\t\t\t\t\t<a href=\"https://oauth.groupme.com/oauth/authorize?client_id=iPV0ihYHVPnlo1KEev9nsJMWMm0xgz8gvpUvtE5pPqaH6Hcf\">\n\t\t\t\t\t\tGo to GroupMe\n\t\t\t\t\t</a>\n\t\t\t\t) : (\n\t\t\t\t\t<Button type=\"submit\">Register</Button>\n\t\t\t\t)}\n\t\t\t\t{errors.create && (\n\t\t\t\t\t<Segment color=\"red\" inverted content={errors.create.message} />\n\t\t\t\t)}\n\t\t\t</Form>\n\t\t</div>\n\t);\n};\n\nexport default Register;\n\n// const Register = (props) => {\n\n//     const {handleSubmit, register, errors, getValues} = useForm();\n//     console.log(errors)\n//     const onSubmit = values => {\n//         console.log(values)\n//     }\n\n//     //returns true if email is use\n//     const checkEmail = async (email) => {\n//         return await axios({\n//             method: 'post',\n//             url: '/user/check',\n//             body:{\n//                 email: email\n//             }\n//         }).then( result => {\n//             return result.in_use\n//         })\n//     }\n\n//     //put the cookie check/redirect here\n//     return <Container centered className=\"register-page\">\n//         <Form className=\"register-form\" onSubmit={handleSubmit(onSubmit)}>\n\n//         <input type=\"text\" placeholder=\"Email\" name=\"Email\" ref={register({\n//             required: true,\n//             pattern: /^\\S+@\\S+$/i,\n//             validate: value => checkEmail(value)\n//             })} />\n//             {errors.email && \"Email already in use\"}\n//         <input type=\"text\" placeholder=\"Password\" name=\"Password\" ref={register({required: true})} />\n//         <input type=\"text\" placeholder=\"Confirm Password\" name=\"Password\" ref={register({required: true, validate: value => {\n//             console.log(getValues())\n//         }})} />\n//         <input type=\"checkbox\" placeholder=\"Link GroupMe Account?\" name=\"Link GroupMe Account?\" ref={register} />\n\n//         <input type=\"submit\" />\n\n//         </Form>\n//     </Container>\n\n// }\n\n// export default Register\n"]},"metadata":{},"sourceType":"module"}